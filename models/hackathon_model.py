# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WOkn42Ex6nCeod9kdZRSbZA_MDWCuNYt

# Load and prepare your data
"""

import torch    
import torch.nn as nn
import torch.optim as optim
from torch.utils.data import DataLoader, TensorDataset
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics
import pickle 
from sklearn.preprocessing import LabelEncoder

data_path = 'C:\\Users\\xlor1\\Downloads\\housing predition webapp\\HousingDataset.csv'
housing_data = pd.read_csv(data_path)

print(housing_data)



"""#Clean Dataset"""

X = housing_data[['area', 'bedrooms','bathrooms','stories','mainroad','guestroom','basement','hotwaterheating','airconditioning','parking','prefarea','furnishingstatus']]
y = housing_data['price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1000)
 

mainroadEncode = LabelEncoder()
guestroomEncode = LabelEncoder()
basementEncode = LabelEncoder()
hotwaterEncode = LabelEncoder()
airconditioningEncode = LabelEncoder()
prefareaEncode = LabelEncoder()
furnishingstatusEncode = LabelEncoder()
X_train['mainroad'] = mainroadEncode.fit_transform(X_train['mainroad'])
pickle.dump(mainroadEncode,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\mainroadFit.pkl','wb'))
X_train['guestroom'] = guestroomEncode.fit_transform(X_train['guestroom'])
pickle.dump(guestroomEncode,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\guestroomFit.pkl','wb'))
X_train['basement'] = basementEncode.fit_transform(X_train['basement'])
pickle.dump(basementEncode,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\basementFit.pkl','wb'))
X_train['hotwaterheating'] = hotwaterEncode.fit_transform(X_train['hotwaterheating'])
pickle.dump(hotwaterEncode,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\hotwaterFit.pkl','wb'))
X_train['airconditioning'] = airconditioningEncode.fit_transform(X_train['airconditioning'])
pickle.dump(airconditioningEncode,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\airconditioningFit.pkl','wb'))
X_train['prefarea'] = prefareaEncode.fit_transform(X_train['prefarea'])
pickle.dump(prefareaEncode,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\prefareaFit.pkl','wb'))
X_train['furnishingstatus'] = furnishingstatusEncode.fit_transform(X_train['furnishingstatus'])
pickle.dump(furnishingstatusEncode,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\furnishingstatusFit.pkl','wb'))

print(X_train)

#X_test

X_test['mainroad'] = mainroadEncode.fit_transform(X_test['mainroad'])
X_test['guestroom'] = guestroomEncode.fit_transform(X_test['guestroom'])
X_test['basement'] = basementEncode.fit_transform(X_test['basement'])
X_test['hotwaterheating'] = hotwaterEncode.fit_transform(X_test['hotwaterheating'])
X_test['airconditioning'] = airconditioningEncode.fit_transform(X_test['airconditioning'])
X_test['prefarea'] = prefareaEncode.fit_transform(X_test['prefarea'])
X_test['furnishingstatus'] = furnishingstatusEncode.fit_transform(X_test['furnishingstatus'])



rf = RandomForestRegressor()
rf.fit(X_train,y_train)
y_pred = rf.predict(X_test)
# Calculate Percentage Difference
mean_percentage_difference = (abs(y_pred - y_test) / abs(y_test)).mean() * 100


# Print Percentage Difference
print("Percentage Accurate:", 100-mean_percentage_difference)

data_path = 'C:\\Users\\xlor1\\Downloads\\housing predition webapp\\TestData.csv'
housing_data = pd.read_csv(data_path)
housing_data.drop(['id'],axis=1,inplace=True)
print(housing_data)
copy = housing_data

X = housing_data[['area', 'bedrooms','bathrooms','stories','mainroad','guestroom','basement','hotwaterheating','airconditioning']]

le = LabelEncoder()
housing_data = housing_data.apply(le.fit_transform)
housing_data = pd.DataFrame(housing_data)

y_pred = rf.predict(housing_data)
# Calculate Percentage Difference
copy.insert(0, "Price", [i for i in y_pred], True)
print(copy)

copy.to_csv('out.csv', index=False)

pickle.dump(rf,open('C:\\Users\\xlor1\\Downloads\\housing predition webapp\\models\\model.pkl','wb'))